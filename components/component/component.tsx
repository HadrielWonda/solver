/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/R288h2euRDp
 */
import { Switch } from "@/components/ui/switch";
import { Select } from "@/components/ui/select";
import {
  AccordionTrigger,
  AccordionContent,
  AccordionItem,
  Accordion,
} from "@/components/ui/accordion";
import { Button } from "@/components/ui/button";
import { CardTitle, CardHeader, CardContent, Card } from "@/components/ui/card";
import { ResponsiveLine } from "@nivo/line";

export function Component() {
  return (
    <div className="flex h-screen">
      <div className="w-1/4 bg-gray-100 p-4">
        <div className="mt-4">
          <div className="flex items-center">
            <label
              className="text-sm font-medium text-gray-900"
              htmlFor="toggleGrid"
            >
              Toggle Grid:
            </label>
            <Switch id="toggleGrid" />
          </div>
          <div className="flex items-center mt-4">
            <label
              className="text-sm font-medium text-gray-900"
              htmlFor="xAxisType"
            >
              X-axis Type:
            </label>
            <Select className="w-1/2 ml-2" id="xAxisType">
              <option value="linear">Linear</option>
              <option value="log">Log</option>
            </Select>
          </div>
          <div className="flex items-center mt-4">
            <label
              className="text-sm font-medium text-gray-900"
              htmlFor="yAxisType"
            >
              Y-axis Type:
            </label>
            <Select className="w-1/2 ml-2" id="yAxisType">
              <option value="linear">Linear</option>
              <option value="log">Log</option>
            </Select>
          </div>
        </div>
        <Accordion className="mt-4" collapsible type="single">
          <AccordionItem value="function1">
            <AccordionTrigger className="flex items-center justify-between cursor-pointer">
              <h3 className="text-base font-semibold">Function 1</h3>
              <ChevronDownIcon className="h-5 w-5" />
            </AccordionTrigger>
            <AccordionContent>
              <div className="space-y-4">
                <div className="flex items-center">
                  <label
                    className="block mb-2 text-sm font-medium text-gray-900"
                    htmlFor="equationType1"
                  >
                    Equation Type:
                  </label>
                  <Select className="flex-grow mr-4" id="equationType1">
                    <option value="parametric">Parametric</option>
                    <option value="polar">Polar</option>
                    <option value="implicit">Implicit</option>
                  </Select>
                </div>
                <div className="flex items-center">
                  <label
                    className="block mb-2 text-sm font-medium text-gray-900"
                    htmlFor="graphType1"
                  >
                    Graph Type:
                  </label>
                  <Select className="flex-grow mr-4" id="graphType1">
                    <option value="scatter">Scatter</option>
                    <option value="polyline">Polyline</option>
                    <option value="interval">Interval</option>
                  </Select>
                </div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem value="function2">
            <AccordionTrigger className="flex items-center justify-between cursor-pointer">
              <h3 className="text-base font-semibold">Function 2</h3>
              <ChevronDownIcon className="h-5 w-5" />
            </AccordionTrigger>
            <AccordionContent>
              <div className="space-y-4">
                <div className="flex items-center">
                  <label
                    className="block mb-2 text-sm font-medium text-gray-900"
                    htmlFor="equationType2"
                  >
                    Equation Type:
                  </label>
                  <Select className="flex-grow mr-4" id="equationType2">
                    <option value="parametric">Parametric</option>
                    <option value="polar">Polar</option>
                    <option value="implicit">Implicit</option>
                  </Select>
                </div>
                <div className="flex items-center">
                  <label
                    className="block mb-2 text-sm font-medium text-gray-900"
                    htmlFor="graphType2"
                  >
                    Graph Type:
                  </label>
                  <Select className="flex-grow mr-4" id="graphType2">
                    <option value="scatter">Scatter</option>
                    <option value="polyline">Polyline</option>
                    <option value="interval">Interval</option>
                  </Select>
                </div>
              </div>
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </div>
      <div className="flex flex-col w-full">
        <div className="flex justify-between p-4 bg-white">
          <div className="flex space-x-4">
            <Button variant="ghost">123</Button>
            <Button variant="ghost">αβγε</Button>
            <Button variant="ghost">abc</Button>
            <Button variant="ghost">αβγ</Button>
          </div>
          <Button variant="ghost">
            <KeyboardIcon className="text-gray-600" />
          </Button>
        </div>
        <div className="h-full flex items-center justify-center">
          <Card className="h-full w-full max-w-2xl">
            <CardHeader>
              <div className="flex justify-between items-center">
                <CardTitle>Graph</CardTitle>
                <Button variant="ghost">
                  <PanelTopCloseIcon className="h-5 w-5" />
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <LineChart className="aspect-[16/9]" />
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}

function ChevronDownIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m6 9 6 6 6-6" />
    </svg>
  );
}

function KeyboardIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="20" height="16" x="2" y="4" rx="2" ry="2" />
      <path d="M6 8h.001" />
      <path d="M10 8h.001" />
      <path d="M14 8h.001" />
      <path d="M18 8h.001" />
      <path d="M8 12h.001" />
      <path d="M12 12h.001" />
      <path d="M16 12h.001" />
      <path d="M7 16h10" />
    </svg>
  );
}

function PanelTopCloseIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="18" height="18" x="3" y="3" rx="2" ry="2" />
      <line x1="3" x2="21" y1="9" y2="9" />
      <path d="m9 16 3-3 3 3" />
    </svg>
  );
}

function LineChart(props: any) {
  return (
    <div {...props}>
      <ResponsiveLine
        data={[
          {
            id: "Desktop",
            data: [
              { x: "Jan", y: 43 },
              { x: "Feb", y: 137 },
              { x: "Mar", y: 61 },
              { x: "Apr", y: 145 },
              { x: "May", y: 26 },
              { x: "Jun", y: 154 },
            ],
          },
          {
            id: "Mobile",
            data: [
              { x: "Jan", y: 60 },
              { x: "Feb", y: 48 },
              { x: "Mar", y: 177 },
              { x: "Apr", y: 78 },
              { x: "May", y: 96 },
              { x: "Jun", y: 204 },
            ],
          },
        ]}
        margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
        xScale={{
          type: "point",
        }}
        yScale={{
          type: "linear",
        }}
        axisTop={null}
        axisRight={null}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 5,
          tickPadding: 16,
        }}
        colors={["#2563eb", "#e11d48"]}
        pointSize={6}
        useMesh={true}
        gridYValues={6}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        role="application"
      />
    </div>
  );
}
